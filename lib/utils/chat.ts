import { MESSAGE_LIMITS } from "../constants"

/**
 * Generates a smart chat title from the first message
 * Uses intelligent truncation and removes common prefixes
 */
export const generateChatTitle = (firstMessage: string): string => {
  if (!firstMessage?.trim()) {
    return `Chat ${new Date().toLocaleTimeString()}`
  }

  let cleanMessage = firstMessage.trim()

  const prefixesToRemove = [
    "can you",
    "could you",
    "would you",
    "will you",
    "please",
    "help me",
    "i need",
    "how do i",
    "what is",
    "what are",
    "tell me",
    "explain",
    "show me",
  ]

  const lowerMessage = cleanMessage.toLowerCase()
  for (const prefix of prefixesToRemove) {
    if (lowerMessage.startsWith(prefix)) {
      cleanMessage = cleanMessage.substring(prefix.length).trim()
      break
    }
  }

  if (cleanMessage.length > 0) {
    cleanMessage = cleanMessage.charAt(0).toUpperCase() + cleanMessage.slice(1)
  }

  if (cleanMessage.length > MESSAGE_LIMITS.TITLE_MAX_LENGTH) {
    const truncated = cleanMessage.substring(0, MESSAGE_LIMITS.TITLE_MAX_LENGTH)
    const lastSpaceIndex = truncated.lastIndexOf(" ")

    if (lastSpaceIndex > MESSAGE_LIMITS.TITLE_MAX_LENGTH * 0.7) {
      return truncated.substring(0, lastSpaceIndex) + "..."
    }
    return truncated + "..."
  }

  return cleanMessage
}

/**
 * Checks if a chat title is auto-generated (timestamp-based)
 */
export const isAutoGeneratedTitle = (title: string): boolean => {
  return title.startsWith("Chat ") && title.includes(":")
}

/**
 * Generates a title using AI/API if available, falls back to smart generation
 */
export const generateSmartChatTitle = async (firstMessage: string): Promise<string> => {
  // In the future, this could call an AI service for even better titles
  return generateChatTitle(firstMessage)
}
